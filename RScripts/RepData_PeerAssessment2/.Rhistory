getwd()
source("/RScripts/pollutantmean.R")
source("/home/lukechen/R/RScripts/pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("/home/lukechen/R/RScripts/complete.R")
complete("specdata", 1)
complete.cases(y[1])
complete.cases(y[[1]])
source("/home/lukechen/R/RScripts/complete.R")
complete.cases(y[[1]])
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
source("/home/lukechen/R/RScripts/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("/home/lukechen/R/RScripts/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
source("/home/lukechen/R/RScripts/complete.R")
complete("specdata", c(2, 4, 8, 10, 12))
z<-data.frame(id=NA, nobs=NA)[numeric(0), ]
i=1
count<-sum(complete.cases(y[[i]]))
number<-id
id=1
number<-id
temp<-data.frame(number,count)
temp
colnames(temp)<-c("id","nobs")
z<-rbind(z,temp)
z
id=2
i=2
count<-sum(complete.cases(y[[i]]))
number<-id
temp<-data.frame(number,count)
colnames(temp)<-c("id","nobs")
z<-rbind(z,temp)
z
source("/home/lukechen/R/RScripts/complete.R")
complete("specdata", 30:25)
complete("specdata", 1:2)
source("/home/lukechen/R/RScripts/complete.R")
complete("specdata", 1:2)
complete("specdata", 30:25)
getwd()
library(Swirl)
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
?matrix
?solve
getwd()
source("/RScripts/makeCacheMatrix.R")
source("/home/lukechen/R/RScripts/makeCacheMatrix.R")
source("/home/lukechen/R/RScripts/cacheSolve.R")
a <- makeCacheMatrix(matrix(c(-1, -2, 1, 1), 2,2))
cacheSolve(a)
cacheSolve(makeCacheMatrix(matrix(c(-1, -2, 1, 1), 2,2)))
cacheSolve(a)
b <- makeCacheMatrix(matrix(c(0,0,0,0),2,2))
cacheSolve(b)
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=T)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1), 100, replace=T, prob=c(0.3,0.7))
flips <- sample(c(0,1),
| 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2<-rbinom(100, 1, 0.7)
flips2
sum(flips)
sum(flips2)
?rnomr()
?rnorm
rnomr(10)
rno4m(10)
rnorm(10)
rnorm(10, 100, 25)
rpois(5, 10)
my_pois<-replicate(100, rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
?plot
plot(x = cars$speed, y=cars$dist, xlab="Speed")
plot(x = cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y=cars$dist, ylab="Stopping Distance", xlab="Speed")
plot(x = cars$speed, y=cars$dist, ylab="Stopping Distance", xlab="Speed", main ="My Plot")
plot(cars, main="My Plot")
plot(cars, sub= "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
data("mtcars")
data(mtcars)
?boxplot
boxplot(data=mtcars, mpg~cyl)
boxplot(formula = mpg~cyl, data=mtcars)
hist(mtcars$mpg)
library(knitr)
knit2html("/home/lukechen/git/RepData_PeerAssessment1/PA1_template.Rmd")
render_html("/home/lukechen/git/RepData_PeerAssessment1/PA1_template.Rmd")
knit2html()
knit2html("/home/lukechen/git/RepData_PeerAssessment1/PA1_template.Rmd")
getwd()
library((shiny))
library(shiny)
install.packages("shiny")
y<-women
View(y)
y<-precip
y
library(shiny)
runApp(())
runApp()
y<-iris
View(y)
runApp()
library(rpart)
View(y)
fit<-rpart(Species~.)
fit<-rpart(Species~., y)
summary(fit)
?rpart
plot(fit)
text(fit, use.n=T)
source('~/.active-rstudio-document', echo=TRUE)
iris[-sub,]
predict(fit, iris[-sub,], type = "class")
predict(fit, iris[-sub,1:4], type = "class")
fit
plot(fit)
text(fit)
predict(fit, iris[-sub,1:4], type = "prob")
rpart.plot
rpart.plot(fit)
install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(fit)
min(y$Petal.Length)
min(y$Petal.Width)
max(y$Petal.Length)
max(y$Petal.Width)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
predict(fit,type="class",)
View(y)
View(y)
fit <- rpart(Species ~ Petal.Length+Petal.Width, data = iris, subset = sub)
fit
predict(fit,c(1,2))
table(predict(fit, iris[-sub,], type = "class"), iris[-sub, "Species"])
fit
newdata<-data.frame(Petal.Length=6,Petal.Width=2)
preduct(fit,newdata)
predict(fit,newdata)
fit <- rpart(Species ~ ., data = iris)
fit
plot(fit)
text(fit)
rpart.plot(fit)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fit <- rpart(Species ~ Petal.Length+Petal.Width, data = iris)
fit
newdata<-data.frame(Petal.Length=6,Petal.Width=2)
predict(fit,newdata)
runApp()
runApp()
runApp()
?data.frame
runApp()
runApp()
runApp()
install.packages("rsconnect")
rsconnect::setAccountInfo(name='lukeyanchen',
token='BFDD5D1571A4D091DC0F0571B91DF0E9',
secret='7szbtNt2yjahOJFzZ2nEe1nTlmtYykYBOL/N8Tyj')
library(rsconnect)
deployApp()
deployApp()
rsconnect::setAccountInfo(name='lukeyanchen',token='BFDD5D1571A4D091DC0F0571B91DF0E9',secret='7szbtNt2yjahOJFzZ2nEe1nTlmtYykYBOL/N8Tyj')
deployApp()
runApp()
deployApp(appName = "Iris")
runApp()
runApp()
runApp()
deployApp("iris")
setwd("/home/lukechen/R/RScripts/RepData_PeerAssessment2/")
library(R.utils)
install.packages("R.utils")
